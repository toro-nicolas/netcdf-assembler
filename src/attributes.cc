/*
** SEAGNAL PROJECT, 2024
** netcdf-assembler
** File description:
** The file containing the attributes functions
*/
/**
 * @file attributs.cc
 * @brief The file containing the attributes functions
 * @author Nicolas TORO
 */

#include "../include/nc_assembler.hh"

void assembler::f_add_globals_attributes(void)
{
    const char *ac_value = "This file was generated by netcdf-assembler from several NetCDF or GRIB files.";
    int32_t ec = nc_put_att_text(_s_output_file.i_file_id,
        NC_GLOBAL, "File description", strlen(ac_value), ac_value);
    if (ec != 0) {
        fprintf(stderr, RED BOLD "Add global attribute:" RESET RED " File description: %s\n" RESET, nc_strerror(ec));
        std::exit(EXIT_FAILURE);
    }
    ec = nc_put_att_double(_s_output_file.i_file_id,
        NC_GLOBAL, "Resolution", NC_DOUBLE, 1, &_d_resolution);
    if (ec != 0) {
        fprintf(stderr, RED BOLD "Add global attribute:" RESET RED " File description: %s\n" RESET, nc_strerror(ec));
        std::exit(EXIT_FAILURE);
    }
    
    std::string str_tmp_value = "";
    for (size_t i_index_file = 0; i_index_file < _vs_input_files.size(); i_index_file++) {
        if (i_index_file != 0)
            str_tmp_value += ", ";
        str_tmp_value += _vs_input_files[i_index_file].ac_path;
    }
    ac_value = (char *)str_tmp_value.c_str();
    ec = nc_put_att_text(_s_output_file.i_file_id,
        NC_GLOBAL, "Files list", strlen(ac_value), ac_value);
    if (ec != 0) {
        fprintf(stderr, RED BOLD "Add global attribute:" RESET RED " File description: %s\n" RESET, nc_strerror(ec));
        std::exit(EXIT_FAILURE);
    }
}
